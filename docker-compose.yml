version: '3.8'

services:
  # PostgreSQL
  postgres:
    image: postgres:15
    container_name: mspr2-cofrap-postgres
    environment:
      POSTGRES_DB: mspr2_cofrap
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./k8s/postgres-init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - mspr2-network

  # Frontend Django
  frontend:
    build: ./frontend_django
    container_name: mspr2-cofrap-frontend
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=mspr2_cofrap
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_PORT=5432
      - DJANGO_DEBUG=True
      - OPENFAAS_GATEWAY_URL=http://localhost:8080
    depends_on:
      - postgres
    networks:
      - mspr2-network
    volumes:
      - ./frontend_django:/app

  # Fonction generate-password (service simple)
  generate-password:
    build: ./functions/generate_password
    container_name: mspr2-cofrap-generate-password
    ports:
      - "8081:8080"
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=mspr2_cofrap
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    depends_on:
      - postgres
    networks:
      - mspr2-network
    command: python server.py

  # Fonction generate-2fa (service simple)
  generate-2fa:
    build: ./functions/generate_2fa
    container_name: mspr2-cofrap-generate-2fa
    ports:
      - "8082:8080"
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=mspr2_cofrap
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    depends_on:
      - postgres
    networks:
      - mspr2-network
    command: python server.py

  # Fonction authenticate-user (service simple)
  authenticate-user:
    build: ./functions/authenticate_user
    container_name: mspr2-cofrap-authenticate-user
    ports:
      - "8083:8080"
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=mspr2_cofrap
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - JWT_SECRET_KEY=your-secret-key-change-in-production
    depends_on:
      - postgres
    networks:
      - mspr2-network
    command: python server.py

volumes:
  postgres_data:

networks:
  mspr2-network:
    driver: bridge 